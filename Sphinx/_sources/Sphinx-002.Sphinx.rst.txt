====================
2.Sphinxの導入・設定
====================

2.1.サマリ　〜用語編〜
====================

2.1.1.Python
-------------
プログラミング言語のひとつ。そのコードは可読性が高く、学習コストが低い。現在最もホットな言語といっても過言ではありません。

|

2.1.2.pip
--------------
Pythonで書かれたパッケージソフトウェアをインストール・管理するためのパッケージ管理システムのこと。

|

2.1.3.カレントディレクトリ
-----------------------
プロセスが現在関連付けられている（現在の位置である）ディレクトリのことです。
つまり、自分がいまいるディレクトリのことです。

|


2.1.4.スーパーユーザー
---------------------
特権ユーザーとも呼称されます。
特定の環境でどのような操作であっても制限なく実行できるユーザーです。
つまり「なんでもできるマン」です。

Windows、Linuxではそれぞれ以下のような特権ユーザーが構築時にデフォルトでいます。

Windows...Administrator
Linux...root

| 
| 
| 


2.2.サマリ　〜コマンド編〜
=======================

	.. note:: 

		準備中　(^ω^)
	| 

2.3.ハンズオン
==============

2.3.1.スーパーユーザー になる。
-----------------------------
1.何はともあれスーパーユーザーに昇格します。

	.. code-block:: shell
		
		##################
		#rootに昇格
		##################
		sudo su

	| 

2.3.1.PIPのインストール
-------------------------
1.Pythonのバージョンを確認します。

	.. code-block:: bash

		###################################
		#[version]オプションでバージョンを確認
		###################################
		python --version

		########################################
		#バージョンは2.7.5であることが確認できます。
		########################################
		Python 2.7.5
	| 

2.PIPをインストールします。

	.. code-block:: bash 

		########################
		#curlコマンドでpipを取得。
		########################
		curl -O https://bootstrap.pypa.io/get-pip.py

		########################
		#コマンド実行結果
		########################
		[root@Mai-Test ec2-user]# curl -O https://bootstrap.pypa.io/			get-pip.py
  		% Total % Received % Xferd  Average Speed Time Time Time Current
		
           	Dload  Upload   Total   Spent    Left  Speed
		100 1558k 100 1558k 0 0 3401k 0 --:--:-- --:--:-- --:--:-- 3409k
		
		######################################
		#easy_install pipでインストールできるらしい。
		#Python得意な人教えてください。
		######################################
		[root@Mai-Test pip]# easy_install pip
		Searching for pip
		Best match: pip 9.0.1
		Adding pip 9.0.1 to easy-install.pth file
		Installing pip script to /usr/bin
		Installing pip3.5 script to /usr/bin
		Installing pip3 script to /usr/bin

		Using /root/.local/lib/python2.7/site-packages
		Processing dependencies for pip
		F 

		#####################################
		#バージョンを確認する。
		#####################################
		[root@Mai-Test pip]# pip -V

		pip 9.0.1 from /root/.local/lib/python2.7/site-packages (python 2.7)

		| 
		| 
		| 

3.Pythonをインストール

	.. code-block:: bash 

		##################################
		#pipコマンドでsohinxをインストール！
		##################################
		pip install Sphinx

		##################################
		#実行結果
		##################################
		Collecting Sphinx
		  Downloading Sphinx-1.6.5-py2.py3-none-any.whl (1.9MB)		
		    100% |████████████████████████████████| 1.9MB 352kB/s 
		Collecting alabaster<0.8,>=0.7 (from Sphinx)
		  Downloading alabaster-0.7.10-py2.py3-none-any.whl
			Requirement already satisfied: Jinja2>=2.3 in /usr/lib/python2.7/site-packages (from Sphinx)
		Collecting snowballstemmer>=1.1 (from Sphinx)
		  Downloading snowballstemmer-1.2.1-py2.py3-none-any.whl (64kB)
		    100% |████████████████████████████████| 71kB 4.8MB/s 
		Collecting babel!=2.0,>=1.3 (from Sphinx)
  		  Downloading Babel-2.5.1-py2.py3-none-any.whl (6.8MB)
    		100% |████████████████████████████████| 6.8MB 100kB/s 
		Collecting imagesize (from Sphinx)
  		  Downloading imagesize-0.7.1-py2.py3-none-any.whl
		  Requirement already satisfied: setuptools in /usr/lib/python2.7/site-packages (from Sphinx)
		Collecting Pygments>=2.0 (from Sphinx)
  		  Downloading Pygments-2.2.0-py2.py3-none-any.whl (841kB)
    		100% |████████████████████████████████| 849kB 867kB/s 
		Collecting typing; python_version < "3.5" (from Sphinx)
  		  Downloading typing-3.6.2-py2-none-any.whl
		Collecting docutils>=0.11 (from Sphinx)
  		  Downloading docutils-0.14-py2-none-any.whl (543kB)
    		100% |████████████████████████████████| 552kB 1.4MB/s 
		    Requirement already satisfied: requests>=2.0.0 in /usr/lib/python2.7/site-packages (from Sphinx)
			Requirement already satisfied: six>=1.5 in /usr/lib/python2.7/site-packages (from Sphinx)
		Collecting sphinxcontrib-websupport (from Sphinx)
  		Downloading sphinxcontrib_websupport-1.0.1-py2.py3-none-any.whl
		Requirement already satisfied: markupsafe in /usr/lib64/python2.7/site-packages (from Jinja2>=2.3->Sphinx)
		Collecting pytz>=0a (from babel!=2.0,>=1.3->Sphinx)
  		  Downloading pytz-2017.3-py2.py3-none-any.whl (511kB)
    	  100% |████████████████████████████████| 512kB 1.5MB/s 
		Installing collected packages: alabaster, snowballstemmer, pytz, babel, imagesize, Pygments, typing, docutils, sphinxcontrib-websupport, Sphinx
  		Found existing installation: Babel 0.9.6
    		Uninstalling Babel-0.9.6:
      		Successfully uninstalled Babel-0.9.6
		Successfully installed Pygments-2.2.0 Sphinx-1.6.5 alabaster-0.7		.10 babel-2.5.1 docutils-0.14 imagesize-0.7.1 pytz-2017.3 
		snowballstemmer-1.2.1 sphinxcontrib-websupport-1.0.1 
		typing-3.6.2

	|
	| 
	|  
		
4.ドキュメント管理用ディレクトリを作成する。
	
	.. code-block:: bash 

		####################################
		#mkdirコマンドでディレクトリを作成します。
		#/opt2/docとかで管理しましょう！
		####################################
		[root@Mai-Test ec2-user]# mkdir /opt2 
		[root@Mai-Test ec2-user]# 

		####################################
		#lsコマンドで確認
		####################################
		[root@Mai-Test ec2-user]# ls -lh /
		合計 16K
		lrwxrwxrwx.   1 root root    7  7月 11 15:57 bin -> usr/bin
		dr-xr-xr-x.   5 root root 4.0K  7月 11 16:07 boot
		-x.   2 root root    6  3月 10  2016 opt
		
		///略///

		drwxr-xr-x.   2 root root    6 12月  5 14:29 opt2
		dr-xr-xr-x. 107 root root    0 12月  5 10:53 proc

		///略///

		####################################
		#opt2の中にdocディレクトリを作成
		####################################
		[root@Mai-Test ec2-user]# mkdir /opt2/doc
		[root@Mai-Test ec2-user]#

		####################################
		#lsコマンドで確認
		####################################
		[root@Mai-Test ec2-user]# ls -lh /opt2/
		合計 0
		drwxr-xr-x. 2 root root 6 12月  5 14:33 doc #できてますね。
		[root@Mai-Test ec2-user]# 
		
	| 
	| 
	| 


5./opt2/docへ移動


	.. code-block:: bash 	
		
		###############################
		#カレントディレクトリを/opt2/docへ
		###############################
		[root@Mai-Test ec2-user]# cd /opt2/doc
		[root@Mai-Test doc]#
		
		###############################
		#pwdコマンドで確認！
		###############################
		[root@Mai-Test doc]# pwd
		/opt2/doc

	| 
	| 
	| 

6.Sphinx-quickstart！いよいよSphinx使います。

	.. code-block:: bash 

		##############################
		#PATHは通っているはず...!
		##############################
		[root@Mai-Test doc]# sphinx-quickstart
		Welcome to the Sphinx 1.6.5 quickstart utility.

		Please enter values for the following settings (just press Enter to
		accept a default value, if one is given in brackets).

		######################################
		#ドキュメントのルートパスを指定します。
		#デフォルト（カレントディレクトリ）で大丈夫！
		######################################
		Enter the root path for documentation.
		> Root path for the documentation [.]:

		######################################
		#あとはEnterを連打する。
		#連打していると以下の項目から進まなくなります。
		#プロジェクト名を入力してください！（任意）
		######################################
		The project name will occur in several places in the built documentation.
		> Project name: Sphinx
		> Author name(s): Sphinx

		######################################
		#プロジェクトのバージョンを設定しましょう。
		#適当で大丈夫です！
		######################################

		Sphinx has the notion of a "version" and a "release" for the
		software. Each version can have multiple releases. For example, for
		Python the version is something like 2.5 or 3.0, while the release is
		something like 2.5.1 or 3.0a1.  If you don't need this dual structure,
		just set both to the same value.
		> Project version []: 1
		> Project release [1]: 1.1

		######################################
		#プロジェクトの使用言語を指定しましょう。
		#とりあえずjp（Japan）でしょうか。
		######################################
		For a list of supported codes, see
		http://sphinx-doc.org/config.html#confval-language.
		> Project language [en]:jp 


		######################################
		#あとはEnterを連打しましょう。
		#するとどうでしょう。
		######################################

		Finished: An initial directory structure has been created.

		You should now populate your master file ./index.rst and create other documentation
		source files. Use the Makefile to build the docs, like so:
   		make builder
		where "builder" is one of the supported builders, e.g. html, latex or linkcheck.

		[root@Mai-Test doc]# 

		##############################################
		#Finishedしてました！
		#これでプロジェクトスタートへの第一歩を踏み出しました！
		##############################################

	| 
	| 
	| 

7.カレントディレクトリに何ができているのか...
	
		.. code-block:: bash 

			##########################################
			#lsコマンドで確認しましょう！
			##########################################
			[root@Mai-Test doc]# ls -lh 
			合計 20K

			rrw-r--rw-r--r--. 1 root root  603 12月  5 15:06 Makefile
			drwxr-xr-x. 2 root root    6 12月  5 15:06 _build
			drwxr-xr-x. 2 root root    6 12月  5 15:06 _static
			drwxr-xr-x. 2 root root    6 12月  5 15:06 _templates
			rrw-r--rw-r--r--. 1 root root 5.0K 12月  5 15:06 conf.py
			rrrw-r--rw-r--rw-r--r--. 1 root root  434 12月  5 15:06 index.rst
			rrrw-r--rw-r--rw-r--r--. 1 root root  810 12月  5 15:06 make.bat

		| 
		| 
		| 

8.ドキュメントを作成してみましょう。

	.. code-block:: bash 

		###################################
		#viコマンドでファイルを作成！
		#このとき拡張子を.rstにしてください！
		###################################
		[root@Mai-Test doc]# vi doc01.rst
		

		########################################
		#viエディタが起動したら、「a」キーを押下します！
		#すると、インサートモードへ移行しやす。
		#以下を入力しましょう。
		########################################
		=============================
		こんにちは
		=============================
		今日からSphinxを始めます。


		########################################
		#「esc」キーを押下し、
		#「:wq!」入力後、「Enter」キーを押下します。
		#
		#これで編集完了！
		#catコマンドで見てみましょう！
		########################################
		
		[root@Mai-Test doc]# cat doc01.rst 
		=============================
		こんにちは
		=============================
		今日からSphinxを始めます。

	| 
	| 
	| 

9.index.rstの編集
	
	.. code-block:: bash 

		####################################
		#viコマンドでファイルを編集します。
		####################################
		[root@Mai-Test doc]# vi index.rst


		########################################
		#viエディタが起動したら、「a」キーを押下します！
		#すると、インサートモードへ移行しやす。
		#「toctree::」の下にさっき作成したファイル名を
		#入力してやりましょう。
		#
		#この時、1行空白行を入れるのがポイント！
		#
		########################################
		.. Sphinx documentation master file, created by
  		 sphinx-quickstart on Tue Dec  5 15:06:12 2017.
   		You can adapt this file completely to your liking, but it should at least
   		contain the root `toctree` directive.

		Welcome to Sphinx's documentation!
		==================================

		.. toctree::
   		:maxdepth: 2
   		:caption: Contents:
   			　＃空白行を入れてください！
   		doc01 #ここを追加しました！


		Indices and tables
		==================

		* :ref:`genindex`
		* :ref:`modindex`
		* :ref:`search`

		########################################
		#「esc」キーを押下し、
		#「:wq!」入力後、「Enter」キーを押下します。
		#
		#これで編集完了！
		#catコマンドで見てみましょう！
		########################################
		[root@Mai-Test doc]# cat index.rst


	| 
	| 
	| 

10.HTMLを生成してみましょう！
	
	.. code-block:: bash 

		#############################
		#make htmlコマンドでHTML生成！
		#############################
		root@Mai-Test doc]# make html

		#############################
		#実行結果！
		#特にエラーが出なければOKです！
		#############################
		Running Sphinx v1.6.5
		loading translations [jp]... not available for built-in messages
		/usr/lib/python2.7/site-packages/sphinx/util/requests.py:72: UserWarning: Some links may return broken results due to being unable to check the Server Name Indication (SNI) in the returned SSL cert against the hostname in the url requested. Recommended to install requests-2.4.1+.
		  'Some links may return broken results due to being unable to '
		loading pickled environment... done
		building [mo]: targets for 0 po files that are out of date
		building [html]: targets for 1 source files that are out of date
		updating environment: 0 added, 1 changed, 0 removed
		reading sources... [100%] index                                                 
		looking for now-outdated files... none found
		pickling environment... done
		checking consistency... done
		preparing documents... done
		writing output... [100%] index                                                  
		generating indices... genindex
		writing additional pages... search
		copying static files... done
		copying extra files... done
		dumping search index in English (code: en) ... done
		dumping object inventory... done
		build succeeded.

		Build finished. The HTML pages are in _build/html.
		[root@Mai-Test doc]# 

	| 
	| 
	| 

11.HTMLファイルが生成されたかどうかを確認しましょう！
	
	.. code-block:: bash 

		######################################################################
		#今回ですと/opt2/doc/_build/html/配下にHTMLファイルが生成されているはずです。
		#lsコマンドで確認してみましょう。
		######################################################################
		[root@Mai-Test doc]# ls -ls  _build/html/
		合計 28
		0 drwxr-xr-x. 2 root root   48 12月  5 15:14 _sources
		4 drwxr-xr-x. 2 root root 4096 12月  5 15:14 _static	
		4 -rw-r--r--. 1 root root 2796 12月  5 15:14 doc01.html
		4 -rw-r--r--. 1 root root 2571 12月  5 15:32 genindex.html 
		4 -rw-r--r--. 1 root root 3734 12月  5 15:32 index.html　＃こいつ
		4 -rw-r--r--. 1 root root  270 12月  5 15:32 objects.inv
		4 -rw-r--r--. 1 root root 3077 12月  5 15:32 search.html
		4 -rw-r--r--. 1 root root  451 12月  5 15:32 searchindex.js 













